/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

public class Main {
    public static void main(String [] args) {
        int i;
        long sum = 0;
        long term;

        final int MAX = 4000000;
        final int STEP = 3;

        for(i=2, term = fib(i); term < MAX; i += STEP, term = fib(i)) 
            sum = sum + term;

        System.out.println("Answer:" + sum);
    /*
        System.out.println("Term 1:" + fib(1));
        System.out.println("Term 2:" + fib(2));
        System.out.println("Term 3:" + fib(3));
        System.out.println("Term 4:" + fib(4));
        System.out.println("Term 5:" + fib(5));
    */

    }
    public static long fib(int n) {
        long a = 1, b = 2;

        if(n == 1)
            return a;
        else if(n == 2)
            return b;

        int i = 2;
        long c;
        for(; i < n; i++) {
            c = b;
            b = a + b;
            a = c;
        }

        return b;
    }
}


